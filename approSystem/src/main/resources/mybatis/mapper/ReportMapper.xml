<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.appro.dao.IreportDAO">

	<resultMap id="list" type="map">
		<result column="report_no" property="report_no" />
		<result column="report_id" property="report_id" />
		<result column="report_name" property="report_name" />
		<result column="report_title" property="report_title" />
		<result column="report_content" property="report_content" />
		<result column="report_approver" property="report_approver" />
		<result column="report_date" property="report_date" />
		<result column="report_status" property="report_status" />
		<result column="appro_date" property="appro_date" />
		<result column="appro_id" property="appro_id" />
		<result column="member_id" property="member_id" />
		<result column="member_position" property="member_position" />
	</resultMap>

	<sql id="schSql">
		<choose>
			<when test="member_position == '대리'">
				OR ( report_status = 'DR' OR report_id = #{ member_id } )
			</when>
			<when test="member_position == '과장'">
				OR ( report_status = 'CR' OR report_id = #{ member_id } )
			</when>
			<when test="member_position == '차장'">
				OR ( report_status = 'BR' OR report_id = #{ member_id } )
			</when>
			<when test="member_position == '부장'">
				OR ( report_status = 'AR' OR report_id = #{ member_id } )
			</when>
		</choose>
		AND 
			( report_name like '%'||#{schText}||'%'
			OR report_title like '%'||#{schText}||'%')
		<if test="startDate != null and startDate != ''">
			and to_char(report_date, 'YYYY-MM-dd') between #{startDate} and #{endDate}
		</if>
	</sql>
	
	<sql id="reStatusSql">
		DECODE( re.report_status,
		'RT', '반려',
		'TS', '임시저장',
		'END', '최종승인'
		)report_status
	</sql>

	<select id="reportList" parameterType="map" resultMap="list">
		SELECT	    	
			re.report_no,
			re.report_title,
			re.report_name,
			to_char( re.report_date, 'YYYY-MM-dd' ) report_date,
			ap.report_approver,
			<include refid="reStatusSql"></include>
		FROM 
			(
				select	                
			        report_no,
			        report_id,
			        report_title,
			        report_name,
			        report_date,
			        report_status
			    from PAS_report		    
			    WHERE report_id = #{ member_id }			   
			    <include refid="schSql"></include>
			)re
		LEFT JOIN 
			(
			select    
			    report_no,
			    max(report_approver) KEEP (DENSE_RANK LAST order by appro_date) report_approver
			from pas_appro
			GROUP by report_no
			) ap
		ON re.report_no = ap.report_no
	</select>
	
	<insert id="reportWrite">
		INSERT INTO PAS_REPORT (report_no, report_id, report_name, report_title, report_content, report_status)
	 	VALUES 
		 	(
		 		(select nvl(max(report_no),0)+1 from PAS_REPORT),
		 		#{ report_id },
		 		#{ report_name },
		 		#{ report_title },
		 		#{ report_content },
		 		#{ report_status }
		 	)
	</insert>
	
	<select id="reportDetail" resultType="com.project.appro.dto.Report">
		SELECT  
			report_no,
			report_id,
			report_name,
			report_title,
			report_content,
			to_char( report_date, 'YYYY-MM-dd' ) report_date,
			report_status			
		FROM PAS_REPORT 
		WHERE report_no = #{report_no}
	</select>
	
	<update id="reportUpdate">
		UPDATE 
			PAS_REPORT
		SET
			report_title = #{ report_title },
			report_content = #{ report_content }, 
			report_status = #{ report_status }
		WHERE report_no = #{ report_no }
	</update>
	
	<update id="reStatus">
		UPDATE 
			PAS_REPORT
		SET
			report_status = #{ report_status }
		WHERE report_no = #{ report_no }
	</update>
	
	<select id="endListCount" parameterType="map" resultType="Integer">
		SELECT
			count(re.report_no)
		FROM 		
			(
			select	   
				row_number() over(order by report_no desc ) rnum,             
			    report_no,
			    report_id,
			    report_title,
			    report_name,
			    report_date,
			    report_status
			  from PAS_report		    
			where report_status = 'END'
			<include refid="schSql"></include>
			)re
		LEFT JOIN 
			(
			select    
			    report_no,
			    max(report_approver) KEEP (DENSE_RANK LAST order by appro_date) report_approver
			from pas_appro
			GROUP by report_no
			) ap
		ON re.report_no = ap.report_no
	</select>
	
	<select id="endReport" parameterType="map" resultMap="list">
		SELECT
			rnum,
			re.report_no,
			re.report_title,
			re.report_name,
			to_char( re.report_date, 'YYYY-MM-dd' ) report_date,
			ap.report_approver,
			<include refid="reStatusSql"></include>
		FROM 		
			(
			select	   
				row_number() over(order by report_no desc ) rnum,             
			    report_no,
			    report_id,
			    report_title,
			    report_name,
			    report_date,
			    report_status
			from PAS_report		    
			where report_status = 'END'
			<include refid="schSql"></include>
			)re	
		LEFT JOIN 
			(
			select    
			    report_no,
			    max(report_approver) KEEP (DENSE_RANK LAST order by appro_date) report_approver
			from pas_appro
			GROUP by report_no
			) ap
		ON re.report_no = ap.report_no
		WHERE rnum between #{pageNo} * #{listSize} - #{listSize} +1 AND #{pageNo} * #{listSize} 		
	</select>
	
</mapper>