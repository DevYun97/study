<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.project.appro.dao.IreportDAO">

	<resultMap type="map" id="list">
		<result column="report_no" property="report_no" />
		<result column="report_title" property="report_title" />
		<result column="report_content" property="report_content" />
		<result column="report_name" property="report_name" />
		<result column="report_approver" property="report_approver" />
		<result column="report_id" property="report_id" />
		<result column="report_date" property="report_date" />
		<result column="report_status" property="report_status" />
	</resultMap>

<!--  

SELECT 
			DISTINCT
			re.report_no,
			re.report_title,
			re.report_name,
			re.report_date,
			ap.report_approver,
			re.report_status 
		FROM PAS_REPORT re LEFT JOIN PAS_MEMBER mem
		ON re.report_id = mem.member_id
		LEFT JOIN PAS_APPRO ap
		ON re.report_no = ap.report_no

-->

	<select id="reportList" parameterType="map" resultMap="list" >
		SELECT
			re.report_no,
			re.report_title,
			re.report_name,
			re.report_date,
			ap.report_approver,
			re.report_status
		FROM PAS_report re LEFT JOIN 
			(
			select    
			    report_no,
			    max(report_approver) KEEP (DENSE_RANK LAST order by appro_date) report_approver
			from pas_appro
			GROUP by report_no
			) ap
		ON re.report_no = ap.report_no
		WHERE re.report_id = #{ member_id }
		<choose>
			<when test="member_position == 'DD'">
				OR ( report_status = 'DR' OR report_id = #{ member_id } )
			</when>
			<when test="member_position == 'CC'">
				OR ( report_status = 'CR' OR report_id = #{ member_id } )
			</when>
			<when test="member_position == 'BB'">
				OR ( report_status = 'BR' OR report_id = #{ member_id } )
			</when>
			<when test="member_position == 'AA'">
				OR ( report_status = 'AR' OR report_id = #{ member_id } )
			</when>
		</choose>
		ORDER BY report_date DESC
	</select>
	
	<insert id="reportWrite">
		INSERT INTO PAS_REPORT (report_no, report_id, report_name, report_title, report_content, report_status)
	 	VALUES 
		 	(
		 		(select nvl(max(report_no),0)+1 from PAS_REPORT),
		 		#{ report_id },
		 		#{ report_name },
		 		#{ report_title },
		 		#{ report_content },
		 		#{ report_status }
		 	)
	</insert>
	
	<select id="reportDetail" resultType="com.project.appro.dto.Report">
		SELECT * FROM PAS_REPORT WHERE report_no = #{report_no}
	</select>
	
	<update id="reportUpdate">
		UPDATE 
			PAS_REPORT
		SET
			report_title = #{ report_title },
			report_content = #{ report_content }, 
			report_status = #{ report_status }
		WHERE report_no = #{ report_no }
	</update>
	
	<update id="reStatus">
		UPDATE 
			PAS_REPORT
		SET
			report_status = #{ report_status }
		WHERE report_no = #{ report_no }
	</update>
	
	<select id="endReport" parameterType="map" resultMap="list">
		SELECT
			re.report_no,
			re.report_title,
			re.report_name,
			re.report_date,
			ap.report_approver,
			re.report_status
		FROM PAS_report re LEFT JOIN 
			(
			select    
			    report_no,
			    max(report_approver) KEEP (DENSE_RANK LAST order by appro_date) report_approver
			from pas_appro
			GROUP by report_no
			) ap
		ON re.report_no = ap.report_no
		where report_status = 'END'
	</select>

</mapper>